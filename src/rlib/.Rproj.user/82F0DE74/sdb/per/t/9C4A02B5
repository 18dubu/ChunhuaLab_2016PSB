{
    "contents" : "library(igraph)\nlibrary(splines)\nlibrary(survival)\nlibrary(tnet)#network analysis\nsource(\"./util.R\")\ngroups=c('pubmed','inclusion','exclusion')#c(\"inclusion\",\"exclusion\")\nmode=\"CEF_center\"#'Disease_center,CEF_center\n\nfor (group in groups){\n\n  source.file <-c(paste(\"../../result/\",group,\"/allData_table\",sep = \"\"))\n  source(\"./util.R\")\n  mkdir(paste(\"../../result/\",group,\"/network_analysis/\",sep=\"\"))\n  out.table <- c(paste('../../result/',group,'/network_analysis/node_degree_table_',mode,sep=''))\n  \n  allFreq <- read.table(source.file,sep='\\t',header = T, row.names=NULL)\n  if (mode =='CEF_center'){\n    allFreq_clean = allFreq[,c(3,2,4)]\n  }\n  if (mode =='Disease_center'){\n    allFreq_clean = allFreq[,c(2,3,4)]\n  }\n  #find duplicate\n  test<-paste(allFreq_clean[,1],allFreq_clean[,2],sep='~')\n  allFreq_clean<-allFreq_clean[!duplicated(test),]\n  \n  DiseaseName=allFreq_clean[,1]\n  CDE=allFreq_clean[,2]\n  Freq=allFreq_clean[,3]\n  \n  #disease and cde list\n  disease<-unique(DiseaseName)\n  diseaseList<-1:length(disease)\n  names(diseaseList)<-disease\n  \n  index2disease<-disease\n  names(index2disease)<-1:length(disease)\n  \n  cde<-unique(CDE)\n  cdeList<-1:length(cde)\n  names(cdeList)<-cde\n  \n  \n  index.table<-data.frame()\n  a<-NULL\n  b<-NULL\n  c<-NULL\n  for (i in 1:nrow(allFreq_clean)){\n    a<-append(a,diseaseList[[DiseaseName[i]]])\n    b<-append(b,cdeList[[CDE[i]]])\n    c<-Freq\n  }\n  index.table<-data.frame(a,b,c)\n  net <- as.tnet(index.table, type=\"weighted two-mode tnet\")\n  \n  # Calculate two-mode degree\n  out <- degree_tm(net, measure=\"degree\")\n  \n  # Create one-mode projection\n  net1 <- projecting_tm(net, \"Newman\")\n  \n  # Calculate one-mode degree\n  tmp <- degree_w(net1)[,\"degree\"]\n  \n  # Append to table\n  out <- data.frame(out, onemodedegree=tmp)\n  \n  # Calculate closeness and append to table\n  tmp <- closeness_w(net1 )[,\"closeness\"]\n  out <- data.frame(out, closeness=tmp)\n  \n  # Calculate betweenness and append to table\n  tmp <- betweenness_w(net1 )[,\"betweenness\"]\n  out <- data.frame(out, betweenness=tmp)\n  \n  #set node name\n  out[,\"node\"]<-disease\n  \n  write.table(out,out.table,sep='\\t',quote=F,row.names=F)\n}\n# Pair-wise correlation table\n#tmp <- matrix(nrow=4, ncol=4)\n#tmp[lower.tri(tmp)] <- apply(which(lower.tri(tmp), arr.ind=TRUE)+1, 1, function(a) cor.test(out[,a[1]], out[,a[2]])$estimate)\n\n###########\nsource.in <- c(paste('../../result/inclusion/network_analysis/node_degree_table_',mode,sep=''))\nsource.ex <- c(paste('../../result/exclusion/network_analysis/node_degree_table_',mode,sep=''))\nsource.pubmed <- c(paste('../../result/pubmed/network_analysis/node_degree_table_',mode,sep=''))\nnetwork.in<-read.table(source.in,header=T,sep='\\t')\nnetwork.ex<-read.table(source.ex,header=T,sep='\\t')\nnetwork.pubmed<-read.table(source.pubmed,header=T,sep='\\t')\nout.pdf=c(paste('../../result/network_In_Ex_Pubmed/network_compare_',mode,'.pdf',sep=''))\npdf(out.pdf)\n\nout.compare=c(paste('../../result/network_In_Ex_Pubmed/network_compare_table_',mode,sep=''))\nrm(out.compare)\nwrite.table(paste('Data','Network Attributes',sep='\\t'),out.compare,col.names=F,row.names=F,quote=F)\nwrite.table(paste('','Disease in network','Degree',\t'One mode degree',\t'Closeness', 'Betweenness',sep='\\t'),out.compare,col.names=F,row.names=F,quote=F,append=T)\nwrite.table(paste('Inclusion',length(network.in[,1]),paste(format(colMeans(network.in[2:5]),digits=6),format(lapply(network.in[,2:5],sd),digits=6),sep='~',collapse='\\t'),sep='\\t'),out.compare,col.names=F,row.names=F,append=T,quote=F)\nwrite.table(paste('Exclusion',length(network.ex[,1]),paste(format(colMeans(network.ex[2:5]),digits=6),format(lapply(network.ex[,2:5],sd),digits=6),sep='~',collapse='\\t'),sep='\\t'),out.compare,col.names=F,row.names=F,append=T,quote=F)\nwrite.table(paste('Pubmed',length(network.pubmed[,1]),paste(format(colMeans(network.pubmed[2:5]),digits=6),format(lapply(network.pubmed[,2:5],sd),digits=6),sep='~',collapse='\\t'),sep='\\t'),out.compare,col.names=F,row.names=F,append=T,quote=F)\n(colMeans(network.in[2:5]))\n(colMeans(network.ex[2:5]))\n(colMeans(network.pubmed[2:5]))\n\nex<- displ$new(network.ex[,3])\ninc<- displ$new(network.in[,3])\npub<- displ$new(network.pubmed[,3])\n##Estimate the cut-off\nest1<-estimate_xmin(ex)\nest2<-estimate_xmin(inc)\nest3<-estimate_xmin(pub)\nex$setXmin(est1)\ninc$setXmin(est2)\npub$setXmin(est3)\nplot(ex,col='chocolate1',xlim=c(5,4000),main='Degree Distribution of three networks',xlab='Degree (log)',ylab='Frequency (log)')\nlines(ex, lty=1,col='chocolate1',lwd=3)\nd = plot(inc, draw=FALSE)\npoints(d$x,d$y,col='palegreen3')\nlines(inc,lty=2,col='palegreen3',lwd=3)\nd = plot(pub, draw=FALSE)\npoints(d$x,d$y,col='purple1')\nlines(pub,lty=3,col='purple1',lwd=3)\nlegend(800, 0.95, c(\"Exclusion\",'Inclusion','Pubmed'), col = c('chocolate1','palegreen3','purple1'),text.col = \"black\",lty = c(1, 1,1),cex=0.9,bg = \"gray90\")\n\ndev.off()\n\n",
    "created" : 1410498689524.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1144213430",
    "id" : "9C4A02B5",
    "lastKnownWriteTime" : 1411415900,
    "path" : "~/Dropbox/research/chunhua project/common eligibility feature/src/rlib/networkAnalysis.R",
    "project_path" : "networkAnalysis.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}
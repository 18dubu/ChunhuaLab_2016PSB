{
    "contents" : "rm(list=ls())\nsource(\"./util.R\")\ntarget = 'Comparison_pubmed_ex'\nmkdir(paste(\"../../result/\",target,\"/topCEF/all/\",sep=\"\"))\n\ntarget1 = 'pubmed'\ntarget2 = 'exclusion'\nref1 = 'inclusion'\nref2 = 'exclusion'\nmi.cutoff=0.00000\nnumlimitperdisease=40\nbenchmark = 1\n\ncount_occur<-function(features,restrict=0){\n  ranking <- list()\n  for (cde in features){\n#    if(!(cde %in% restrict)){##\n#      next##\n#    }##\n    if(is.null(ranking[[cde]])){\n      ranking[[cde]] = 0\n    }\n    ranking[[cde]] = ranking[[cde]] + 1\n  }\n  trans <- data.frame(unlist(ranking))\n  trans<-data.frame(CEF=attributes(trans)$row.names,COUNT=trans$unlist.ranking.)\n  return (trans[order(trans[,2],decreasing=T),])#\n}\n\n\nmapST<-function(listCDE,mappingTable){\n  mapping <- read.table(mappingTable,sep='\\t',header=T,row.names=NULL)\n  mapping.cde <- mapping[,1]\n  mapping.st <- mapping[,2]\n  listST = array()\n  j=1\n  index = array()\n  for (i in listCDE){\n    index[j] = which(i == mapping.cde)\n    j =j+1\n  }\n  listST <- mapping.st[index] \n  \n  if(length(listST) == length(listCDE)){\n    return(listST)\n  }\n  else{\n    print (\"input/output length differ\\n\")\n    return(0)\n  }\n}\n\ncompareList.findSig.MI<-function(primaryDF,secondaryDF){\n  #inputs are two combined dataframe which have two columns:first for document name, second for word name\n  #function finds the significant terms for primary list by excluding those which are also frequently occur in secondary list using Mutual Information\n  #n11:num of doc that contains vocab, belongs to p; n10: num of doc that contains vocab, belongs to s; n00: num of doc that contains no vocab, belongs to s; n01: num of doc that contains no vocab, belongs to p\n  p<-primaryDF #ex: adjustment-disorders                    allergy severity - severe\n  s<-secondaryDF#in: adjustment-disorders                          malignant neoplasms\n  #smoothing  \n  n <- length(unique(p[,1]))+length(unique(s[,1]))+2#total doc num, smoothing 2\n  mylist <- list()\n  for (vocab in unique(p[,2])){\n    pcandi <- p[p[,2]==vocab,]\n    scandi <- s[s[,2]==vocab,]\n    n11 <- length(unique(pcandi[,1]))+0.5#smoothing0.5\n    n10 <- length(unique(scandi[,1]))+0.5#smoothing0.5\n    n00 <- length(unique(s[,1])) - length(unique(scandi[,1]))+0.5#smoothing0.5\n    n01 <- length(unique(p[,1])) - length(unique(pcandi[,1]))+0.5#smoothing0.5\n    n0. <- n00 + n01\n    n1. <- n10 + n11\n    n.0 <- n00 + n10\n    n.1 <- n11 + n01\n    I <- (n11/n)*log2(n*n11/n.1/n1.) + (n01/n)*log2(n*n01/n0./n.1) + (n10/n)*log2(n*n10/n1./n.0) + (n00/n)*log2(n*n00/n.0/n0.)\n    mylist[vocab]<-I\n  }\n  midf<-data.frame(vocab=names(mylist),mi=unlist(mylist,use.names=F))\n  occurp <- data.frame(table(p[,2]))\n  occurs <- data.frame(table(s[,2]))\n  for (check in occurp[,1]){\n    if(length(occurs[occurs[,1]==check,][,1])!=0){\n      if(occurp[occurp[,1]==check,][,2] < occurs[occurs[,1]==check,][,2]){\n        occurp <- occurp[!(occurp[,1]==check),]\n      }\n    }\n  }\n  names(occurp)<-c('vocab','count')\n  mydf<- merge(midf,occurp,by='vocab')\n  mydf.sort<-mydf[order(mydf[,2],mydf[,3],decreasing=T),]\n  return (mydf.sort)\n}\n\n###MI\nall.ref1<-read.table(paste(\"../../result/\",ref1,\"/allData_table\",sep=''),sep='\\t',header=T)\nall.ref2<-read.table(paste(\"../../result/\",ref2,\"/allData_table\",sep=''),header=T,sep='\\t', row.names=NULL)\nout.mi<- paste(\"../../result/\",target,\"/topCEF/all/MI_table_candi\",sep='')\nout.loss<- paste(\"../../result/\",target,\"/topCEF/all/MI_table_toploss\",sep='')\nEX<-all.ref2[,c(2,3)]\nIN<-all.ref1[,c(2,3)]\nmi<-compareList.findSig.MI(EX,IN)\n###mi\n##benchmark\nif (benchmark==1){\n  pdf(paste(\"../../result/\",target,\"/topCEF/all/MI_choose_cutoff.pdf\",sep=''))\n  mi.bench<-mi\n  step<-(max(mi.bench[,2])-min(mi.bench[,2]))/100\n  countlist1<-list()\n  countlist2<-list()\n  for (cut in seq(min(mi.bench[,2])-0.001,max(mi.bench[,2]),by=step)){\n    countlist1[[as.character(cut)]]<-length(mi.bench[mi.bench[,2]>=cut,][,2])\n    countlist2[[as.character(cut)]]<-mean(mi.bench[mi.bench[,2]>=cut,][,3])\n  }\n  tmp<-data.frame(unlist(countlist1))\n  dat1<-data.frame(as.numeric(row.names(tmp)),tmp)\n  tmp<-data.frame(unlist(countlist2))\n  dat2<-data.frame(as.numeric(row.names(tmp)),tmp)\n  plot(dat1,log='y',ylim=c(1,3000),xlab='MI cutoff',ylab='CEF count (log)',main='Distribution of candicate CEFs with different MI cutoff',type='l',col='chocolate1',lwd=2)\n  #lines(dat2)\n  dev.off()\n}\n#mi cutoff\nmi<-mi[mi[,2]>mi.cutoff,]\nprint(paste(length(mi[,2]),'CEF left',sep=' '))\nwrite.table(mi,out.mi,quote = F,row.names=F,col.names=F,sep='\\t')\n###TABLE: Most frequently used CEF (In/Ex/Joint) for all diseases\nall.ex<-read.table(paste(\"../../result/\",target2,\"/allData_table\",sep=''),header=T,sep='\\t', row.names=NULL)\nall.ex.ori<-all.ex\nall.in<-read.table(paste(\"../../result/\",target1,\"/allData_table\",sep=''),sep='\\t',header=T)\nex.all<-readLines(paste(\"../../result/\",target2,\"/allCDE\",sep=''))\nin.all<-readLines(paste(\"../../result/\",target1,\"/allCDE\",sep=''))\n\n###PRUNE CEF\nloss.ex<-data.frame()\nfor (current in all.ex[,3]){\n  if(length(mi[mi[,1]==current,][,1])==0){\n    loss.ex<-rbind(loss.ex,all.ex[all.ex[,3]==current,])\n    all.ex<-all.ex[!(all.ex[,3]==current),]\n  }\n}\ntop.loss<-data.frame(sort(table(loss.ex[,3]),decreasing=T)[1:20])\ncount.ex<-lapply(row.names(top.loss), function(x) length(unique(all.ex.ori[all.ex.ori[,3]==x,][,2])))\ncount.in<-lapply(row.names(top.loss), function(x) length(unique(all.ref1[all.ref1[,3]==x,][,2])))\nt<-data.frame(row.names(top.loss),top.loss,unlist(count.in))\ncolnames(t)<-c('Top lost CEF','Count in Ex','Count in In')\nwrite.table(t,out.loss,quote = F,row.names=F,col.names=T,sep='\\t')\n\nin.DiseaseName<-all.in[,2]\nex.DiseaseName<-all.ex[,2]\nshare.disease = intersect(in.DiseaseName,ex.DiseaseName)\nall.ex <- all.ex[all.ex[,2] %in% share.disease,]\nall.in <- all.in[all.in[,2] %in% share.disease,]\n###prune cef\nin.CDE<-all.in[,3]\nin.Freq<-all.in[,4]\nin.st <-all.in[,5]\nex.CDE<-all.ex[,3]\nex.Freq<-all.ex[,4]\nex.st<-all.ex[,5]\n\ninter <- intersect(ex.all,in.all)\nex.unique<-setdiff(ex.all,inter)\nin.unique<-setdiff(in.all,inter)\nmappingTable <- paste('../../result/cde_st_table_',target1,'_',target2,sep='') #in\nout.rank<- paste(\"../../result/\",target,\"/topCEF/all/intersection_sig_MI\",sep='') #out\n\nranking.df1<-count_occur(ex.CDE,inter)\nranking.df2<-count_occur(in.CDE,inter)\nunion.all<-union(ranking.df1[,1],ranking.df2[,1])\nranking.df<-list()\n\nfor (i in union.all){\n  if(!(i %in% ranking.df1[,1])){\n    a<-data.frame(CEF=i,COUNT=0)\n    ranking.df1=rbind(ranking.df1,a)\n  }\n}\n\nfor (i in union.all){\n  if(!(i %in% ranking.df2[,1])){\n    a<-data.frame(CEF=i,COUNT=0)\n    ranking.df2=rbind(ranking.df2,a)\n  }\n}\n\nranking.df<-merge(ranking.df1,ranking.df2,by='CEF')\n\nlistCDE<-ranking.df[,1]\nmapped.st<- mapST(listCDE,mappingTable)\nranking.df <- data.frame(ranking.df,mapped.st,stringsAsFactors=F)\nnames(ranking.df)<-c('CEF','#Exclusion occurrence','#Pubmed occurrence','Semantic Type')\nwrite.table(ranking.df[order(ranking.df[,2],ranking.df[,3],decreasing=T),],out.rank,quote=F,sep='\\t',col.names=T,row.names=F)\n\n\n###########################\nall.ex<-read.table(paste(\"../../result/\",target2,\"/allData_table\",sep=''),header=T,sep='\\t', row.names=NULL)\nshare.disease = intersect(in.DiseaseName,ex.DiseaseName)\nall.ex <- all.ex[all.ex[,2] %in% share.disease,]\nfor (current in all.ex[,3]){\n  if(length(mi[mi[,1]==current,][,1])==0){\n    all.ex<-all.ex[!(all.ex[,3]==current),]\n  }\n}\nin.DiseaseName<-all.in[,2]\nex.DiseaseName<-all.ex[,2]\n#table: Most frequently used CEF (In/Ex/Joint) for each disease \nmkdir(paste(\"../../result/\",target,\"/topCEF/each/\",sep=\"\"))\nout.top5.sig <- paste(\"../../result/\",target,\"/topCEF/each/intersection_sig_MI_top\",numlimitperdisease,sep='')\n#output ranking list: top 5 cde for each disease\nif(file.exists(out.top5.sig)){\n  file.remove(out.top5.sig)\n  print(paste(\"original file removed\",out.top5.sig))\n}\nwrite.table(paste('id','DiseaseName','CEF','Freq Ex','Semantic Type','Pubmed',sep='\\t'),out.top5.sig,quote = F,row.names=F,col.names=F)\nfor (disease in unique(share.disease)){#share.disease\n  num.per.disease <- numlimitperdisease\n  candi.in = all.in[in.DiseaseName==disease,]\n  candi.ex = all.ex[ex.DiseaseName==disease,]\n  Pubmed = rep(0,length(candi.ex[,1]))\n  candi.ex = data.frame(candi.ex,Pubmed)\n  union <- union(candi.in$CDEs,candi.ex$CDEs)\n  inter <- intersect(candi.in$CDEs,candi.ex$CDEs)\n  if (length(union)==0){next}\n  if (length(union)<num.per.disease){num.per.disease=length(union)}\n  ex.unique<-setdiff(candi.ex$CDEs,inter)\n  in.unique<-setdiff(candi.in$CDEs,inter)\n  for (i in inter){\n    add = sum(candi.in[candi.in$CDEs==i,4]) #pubmed count,get rid of duplicate\n    candi.ex[candi.ex$CDEs==i,length(candi.ex[1,])]<-candi.ex[candi.ex$CDEs==i,length(candi.ex[1,])]+add\n  }\n  write.table(candi.ex[order(candi.ex[,4],candi.ex[,6],decreasing=T)[1:num.per.disease],],out.top5.sig,quote = F,row.names=F,col.names=F,append = T,sep='\\t')\n}\n",
    "created" : 1411345137491.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3583337409",
    "id" : "9A0144A9",
    "lastKnownWriteTime" : 1411437712,
    "path" : "~/Dropbox/research/chunhua project/common eligibility feature/src/rlib/Comparison_topCEF_MI.R",
    "project_path" : "Comparison_topCEF_MI.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}